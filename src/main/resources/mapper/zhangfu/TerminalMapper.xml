<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.comdosoft.financial.manage.mapper.zhangfu.TerminalMapper">
  <resultMap id="BaseResultMap" type="com.comdosoft.financial.manage.domain.zhangfu.Terminal">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="good_id" jdbcType="INTEGER" property="goodId" />
    <result column="serial_num" jdbcType="VARCHAR" property="serialNum" />
    <result column="pay_channel_id" jdbcType="INTEGER" property="payChannelId" />
    <result column="merchant_id" jdbcType="INTEGER" property="merchantId" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="agent_id" jdbcType="INTEGER" property="agentId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="is_return_cs_depots" jdbcType="BIT" property="isReturnCsDepots" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="merchant_num" jdbcType="VARCHAR" property="merchantNum" />
    <result column="is_rate_wrong" jdbcType="BIT" property="isRateWrong" />
    <result column="base_rate" jdbcType="INTEGER" property="baseRate" />
    <result column="terminal_marks_id" jdbcType="INTEGER" property="terminalMarksId" />
    <result column="billing_cycles_id" jdbcType="INTEGER" property="billingCyclesId" />
    <result column="opened_at" jdbcType="TIMESTAMP" property="openedAt" />
    <result column="top_charge" jdbcType="INTEGER" property="topCharge" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from terminals
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.comdosoft.financial.manage.domain.zhangfu.Terminal">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into terminals (good_id, serial_num, pay_channel_id, 
      merchant_id, customer_id, status, 
      agent_id, order_id, account, 
      password, is_return_cs_depots, created_at, 
      updated_at, type, merchant_num, 
      is_rate_wrong, base_rate, terminal_marks_id, 
      billing_cycles_id, opened_at, top_charge
      )
    values (#{goodId,jdbcType=INTEGER}, #{serialNum,jdbcType=VARCHAR}, #{payChannelId,jdbcType=INTEGER}, 
      #{merchantId,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{agentId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{isReturnCsDepots,jdbcType=BIT}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{type,jdbcType=TINYINT}, #{merchantNum,jdbcType=VARCHAR}, 
      #{isRateWrong,jdbcType=BIT}, #{baseRate,jdbcType=INTEGER}, #{terminalMarksId,jdbcType=INTEGER}, 
      #{billingCyclesId,jdbcType=INTEGER}, #{openedAt,jdbcType=TIMESTAMP}, #{topCharge,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.comdosoft.financial.manage.domain.zhangfu.Terminal">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update terminals
    set good_id = #{goodId,jdbcType=INTEGER},
      serial_num = #{serialNum,jdbcType=VARCHAR},
      pay_channel_id = #{payChannelId,jdbcType=INTEGER},
      merchant_id = #{merchantId,jdbcType=INTEGER},
      customer_id = #{customerId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      agent_id = #{agentId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      is_return_cs_depots = #{isReturnCsDepots,jdbcType=BIT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=TINYINT},
      merchant_num = #{merchantNum,jdbcType=VARCHAR},
      is_rate_wrong = #{isRateWrong,jdbcType=BIT},
      base_rate = #{baseRate,jdbcType=INTEGER},
      terminal_marks_id = #{terminalMarksId,jdbcType=INTEGER},
      billing_cycles_id = #{billingCyclesId,jdbcType=INTEGER},
      opened_at = #{openedAt,jdbcType=TIMESTAMP},
      top_charge = #{topCharge,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, good_id, serial_num, pay_channel_id, merchant_id, customer_id, status, 
    agent_id, order_id, account, password, is_return_cs_depots, created_at, updated_at, 
    type, merchant_num, is_rate_wrong, base_rate, terminal_marks_id, billing_cycles_id, 
    opened_at, top_charge
    from terminals
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, good_id, serial_num, pay_channel_id, merchant_id, customer_id, status, 
    agent_id, order_id, account, password, is_return_cs_depots, created_at, updated_at, 
    type, merchant_num, is_rate_wrong, base_rate, terminal_marks_id, billing_cycles_id, 
    opened_at, top_charge
    from terminals
  </select>
  
  <select id="countCustomerTerminals" resultType="long">
  	select count(*)
  	from terminals
  	where customer_id=#{customerId}
  </select>
  
  <resultMap extends="BaseResultMap" id="CustomerTerminal" type="com.comdosoft.financial.manage.domain.zhangfu.Terminal">
  	<association columnPrefix="m_" property="merchant" resultMap="com.comdosoft.financial.manage.mapper.zhangfu.MerchantMapper.BaseResultMap" />
  	<association columnPrefix="pc_" property="payChannel" resultMap="com.comdosoft.financial.manage.mapper.zhangfu.PayChannelMapper.BaseResultMap" />
  	<association columnPrefix="g_" property="good" resultMap="GoodWithGoodBrand" />
  </resultMap>
  
  <resultMap extends="com.comdosoft.financial.manage.mapper.zhangfu.GoodMapper.BaseResultMap" id="GoodWithGoodBrand" type="com.comdosoft.financial.manage.domain.zhangfu.Good">
  	<association columnPrefix="gb_" property="goodBrand" resultMap="com.comdosoft.financial.manage.mapper.zhangfu.GoodBrandMapper.BaseResultMap" />
  </resultMap>
  
  <select id="selectCustomerTerminals" resultMap="CustomerTerminal">
    select t.id,
    	t.serial_num,
    	t.pay_channel_id,
    	t.merchant_id,
    	t.status,
    	pc.name as pc_name,
    	m.title as m_title,
    	m.phone as m_phone,
    	g.model_number as g_model_number,
    	gb.name as g_gb_name
    from terminals t
    left join pay_channels pc on pc.id=t.pay_channel_id
    left join merchants m on m.id=t.merchant_id
    left join goods g on g.id=t.good_id
    left join good_brands gb on gb.id=g.good_brands_id
    where t.customer_id=#{param1}
    order by t.created_at desc
    limit #{param2.offset}, #{param2.pageSize}
  </select>

    <resultMap extends="BaseResultMap" id="PageTerminalResultMap" type="com.comdosoft.financial.manage.domain.zhangfu.Terminal">
        <association columnPrefix="m_" property="merchant" resultMap="com.comdosoft.financial.manage.mapper.zhangfu.MerchantMapper.BaseResultMap" />
        <association columnPrefix="pc_" property="payChannel" resultMap="com.comdosoft.financial.manage.mapper.zhangfu.PayChannelMapper.BaseResultMap" />
        <association columnPrefix="g_" property="good" resultMap="com.comdosoft.financial.manage.mapper.zhangfu.GoodMapper.BaseResultMap" />
    </resultMap>

    <sql id="pageWhere">
        <where>
            <if test="status != null"> AND t.status =#{status} </if>
            <if test="keys != null and keys != ''"> AND (t.serial_num like #{keys} or g.title like #{keys}) </if>
        </where>
    </sql>
    <select id="selectPageTerminalsByKeys" resultMap="PageTerminalResultMap">
        select t.*,
        pc.id pc_id, pc.name pc_name,
        m.id m_id, m.title as m_title, m.phone as m_phone,
        g.id g_id, g.title as g_title
        from terminals t
        left join pay_channels pc on pc.id=t.pay_channel_id
        left join merchants m on m.id=t.merchant_id
        left join goods g on g.id=t.good_id
        <include refid="pageWhere" />
        order by t.created_at desc limit #{pageRequest.offset}, #{pageRequest.pageSize}
    </select>

    <select id="countByKeys" resultType="long">
        SELECT count(*) as count
        from terminals t
        left join pay_channels pc on pc.id=t.pay_channel_id
        left join merchants m on m.id=t.merchant_id
        left join goods g on g.id=t.good_id
        <include refid="pageWhere" />

    </select>

    <resultMap extends="BaseResultMap" id="TerminalLazyResultMap" type="com.comdosoft.financial.manage.domain.zhangfu.Terminal">
        <association column="good_id" fetchType="lazy" javaType="com.comdosoft.financial.manage.domain.zhangfu.Good" property="good" select="com.comdosoft.financial.manage.mapper.zhangfu.GoodMapper.selectByPrimaryKey" />
        <association column="pay_channel_id" fetchType="lazy" javaType="com.comdosoft.financial.manage.domain.zhangfu.PayChannel" property="payChannel" select="com.comdosoft.financial.manage.mapper.zhangfu.PayChannelMapper.selectByPrimaryKey" />
        <association column="customer_id" fetchType="lazy" javaType="com.comdosoft.financial.manage.domain.zhangfu.Customer" property="customer" select="com.comdosoft.financial.manage.mapper.zhangfu.CustomerMapper.selectByPrimaryKey" />
        <association column="merchant_id" fetchType="lazy" javaType="com.comdosoft.financial.manage.domain.zhangfu.Merchant" property="merchant" select="com.comdosoft.financial.manage.mapper.zhangfu.MerchantMapper.selectByPrimaryKey" />
        <association column="agent_id" fetchType="lazy" javaType="com.comdosoft.financial.manage.domain.zhangfu.Agent" property="agent" select="com.comdosoft.financial.manage.mapper.zhangfu.AgentProfitSettingMapper.selectByPrimaryKey" />
        <association column="order_id" fetchType="lazy" javaType="com.comdosoft.financial.manage.domain.zhangfu.Order" property="order" select="com.comdosoft.financial.manage.mapper.zhangfu.OrderMapper.selectByPrimaryKey" />
        <association column="{billingCycleId=billing_cycles_id,payChannelId=pay_channel_id}" property="billingCycle" select="com.comdosoft.financial.manage.mapper.zhangfu.PayChannelBillingCycleMapper.findByChannelIdAndBillingCyclesId" />
        <association column="id" fetchType="lazy" javaType="com.comdosoft.financial.manage.domain.zhangfu.OpeningApplie" property="openingApplie" select="com.comdosoft.financial.manage.mapper.zhangfu.OpeningApplieMapper.selectOpeningApplie" />
        <collection column="id" fetchType="lazy" ofType="com.comdosoft.financial.manage.domain.zhangfu.TerminalTradeTypeInfo" property="tradeTypeInfos" select="com.comdosoft.financial.manage.mapper.zhangfu.TerminalTradeTypeInfoMapper.selectTerminalTradeTypeInfos" />
        <collection column="id" fetchType="lazy" ofType="com.comdosoft.financial.manage.domain.zhangfu.TerminalMark" property="terminalMarks" select="com.comdosoft.financial.manage.mapper.zhangfu.TerminalMarkMapper.selectTerminalMarks" />

    </resultMap>

    <select id="findTerminalInfo" resultMap="TerminalLazyResultMap">
        select *
        from terminals
        where id=#{param1}
    </select>

    <select id="countByAgentCode" resultType="long">
        select count(1)
        from terminals t inner join agents a on t.agent_id=a.id
        where a.code like CONCAT(#{param1},'%' )
    </select>

    <select id="countOpenByAgentCode" resultType="long">
        <bind name="STATUS_OPENED" value="@com.comdosoft.financial.manage.domain.zhangfu.Terminal@STATUS_OPENED" />
        select count(1)
        from terminals t inner join agents a on t.agent_id=a.id
        where a.code like CONCAT(#{param1},'%' ) and t.status=#{STATUS_OPENED}
    </select>

</mapper>