<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.comdosoft.financial.manage.mapper.zhangfu.PayChannelMapper">
  <resultMap id="BaseResultMap" type="com.comdosoft.financial.manage.domain.zhangfu.PayChannel">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="support_cancel_flag" jdbcType="BIT" property="supportCancelFlag" />
    <result column="opening_cost" jdbcType="INTEGER" property="openingCost" />
    <result column="need_preliminary_verify" jdbcType="BIT" property="needPreliminaryVerify" />
    <result column="factory_id" jdbcType="INTEGER" property="factoryId" />
    <result column="created_user_id" jdbcType="INTEGER" property="createdUserId" />
    <result column="created_user_type" jdbcType="TINYINT" property="createdUserType" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="support_type" jdbcType="BIT" property="supportType" />
    <result column="opening_requirement" jdbcType="LONGVARCHAR" property="openingRequirement" />
    <result column="opening_datum" jdbcType="LONGVARCHAR" property="openingDatum" />
    <result column="opening_protocol" jdbcType="LONGVARCHAR" property="openingProtocol" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from pay_channels
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.comdosoft.financial.manage.domain.zhangfu.PayChannel">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pay_channels (name, status, support_cancel_flag, 
      opening_cost, need_preliminary_verify, factory_id, 
      created_user_id, created_user_type, created_at, 
      updated_at, support_type, opening_requirement, 
      opening_datum, opening_protocol)
    values (#{name,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{supportCancelFlag,jdbcType=BIT}, 
      #{openingCost,jdbcType=INTEGER}, #{needPreliminaryVerify,jdbcType=BIT}, #{factoryId,jdbcType=INTEGER}, 
      #{createdUserId,jdbcType=INTEGER}, #{createdUserType,jdbcType=TINYINT}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{supportType,jdbcType=BIT}, #{openingRequirement,jdbcType=LONGVARCHAR}, 
      #{openingDatum,jdbcType=LONGVARCHAR}, #{openingProtocol,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.comdosoft.financial.manage.domain.zhangfu.PayChannel">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update pay_channels
    set name = #{name,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      support_cancel_flag = #{supportCancelFlag,jdbcType=BIT},
      opening_cost = #{openingCost,jdbcType=INTEGER},
      need_preliminary_verify = #{needPreliminaryVerify,jdbcType=BIT},
      factory_id = #{factoryId,jdbcType=INTEGER},
      created_user_id = #{createdUserId,jdbcType=INTEGER},
      created_user_type = #{createdUserType,jdbcType=TINYINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      support_type = #{supportType,jdbcType=BIT},
      opening_requirement = #{openingRequirement,jdbcType=LONGVARCHAR},
      opening_datum = #{openingDatum,jdbcType=LONGVARCHAR},
      opening_protocol = #{openingProtocol,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, name, status, support_cancel_flag, opening_cost, need_preliminary_verify, 
    factory_id, created_user_id, created_user_type, created_at, updated_at, support_type, 
    opening_requirement, opening_datum, opening_protocol
    from pay_channels
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, name, status, support_cancel_flag, opening_cost, need_preliminary_verify, 
    factory_id, created_user_id, created_user_type, created_at, updated_at, support_type, 
    opening_requirement, opening_datum, opening_protocol
    from pay_channels
  </select>

  <sql id="pageWhere">
    <where>
      <if test="status != null"> AND status =#{status} </if>
      <if test="keys != null"> AND name like #{keys} </if>
    </where>
  </sql>

   <select id="selectByStatusAndName" resultMap="BaseResultMap">
    select * 
    from pay_channels
     <include refid="pageWhere" />
  </select>

    <!--获取商品对应的通道 -->
    <select id="selectChannels" resultMap="BaseResultMap">
        select payc.id, payc.name
        from goods_pay_channels gpc inner join pay_channels payc on gpc.pay_channel_id=payc.id
        where gpc.good_id = #{param1}
    </select>

  <select id="countByKeys" resultType="long">
    SELECT count(*) as count
    FROM pay_channels
    <include refid="pageWhere" />
  </select>

  <select id="findPageChannelsByKeys" resultMap="BaseResultMap">
    select *
    from pay_channels
    <include refid="pageWhere" />
    order by created_at desc limit #{pageRequest.offset}, #{pageRequest.pageSize}
  </select>

  <!-- 详情lazy -->
  <resultMap extends="BaseResultMap" id="PayChannelLazyResultMap" type="com.comdosoft.financial.manage.domain.zhangfu.PayChannel">
    <association column="factory_id" fetchType="lazy" javaType="com.comdosoft.financial.manage.domain.zhangfu.Factory" property="factory" select="com.comdosoft.financial.manage.mapper.zhangfu.FactoryMapper.selectByPrimaryKey" />
    <collection column="id" fetchType="lazy" ofType="com.comdosoft.financial.manage.domain.zhangfu.City" property="areas" select="com.comdosoft.financial.manage.mapper.zhangfu.CityMapper.selectCities" />
    <collection column="id" fetchType="lazy" ofType="com.comdosoft.financial.manage.domain.zhangfu.PayChannelStandardRate" property="standardRates" select="com.comdosoft.financial.manage.mapper.zhangfu.PayChannelStandardRateMapper.selectStandardRates" />
    <collection column="id" fetchType="lazy" ofType="com.comdosoft.financial.manage.domain.zhangfu.PayChannelBillingCycle" property="billingCycles" select="com.comdosoft.financial.manage.mapper.zhangfu.PayChannelBillingCycleMapper.selectBillingCycles" />
    <collection column="id" fetchType="lazy" ofType="com.comdosoft.financial.manage.domain.zhangfu.OpeningRequirement" property="openingRequirements" select="com.comdosoft.financial.manage.mapper.zhangfu.OpeningRequirementMapper.selectOpeningRequirements" />
    <collection column="id" fetchType="lazy" ofType="com.comdosoft.financial.manage.domain.zhangfu.OtherRequirement" property="cancelRequirements" select="com.comdosoft.financial.manage.mapper.zhangfu.OtherRequirementMapper.selectCancelRequirements" />
    <collection column="id" fetchType="lazy" ofType="com.comdosoft.financial.manage.domain.zhangfu.OtherRequirement" property="updateRequirements" select="com.comdosoft.financial.manage.mapper.zhangfu.OtherRequirementMapper.selectUpdateRequirements" />
    <collection column="id" fetchType="lazy" ofType="com.comdosoft.financial.manage.domain.zhangfu.SupportTradeType" property="supportTradeTypes" select="com.comdosoft.financial.manage.mapper.zhangfu.SupportTradeTypeMapper.selectSupportTradeTypes" />
  </resultMap>

  <select id="findChannelLazyInfo" resultMap="PayChannelLazyResultMap">
    select *
    from pay_channels
    where id=#{param1}
  </select>


    <select id="selectAgentChannels" resultMap="BaseResultMap">
        select pc.*
        from agent_profit_settings aps inner join pay_channels pc on aps.pay_channel_id=pc.id
        where aps.agent_id=#{param1}
        group by pc.id
    </select>

</mapper>