<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.comdosoft.financial.manage.mapper.zhangfu.OrderMapper">
  <resultMap id="BaseResultMap" type="com.comdosoft.financial.manage.domain.zhangfu.Order">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_number" jdbcType="VARCHAR" property="orderNumber" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="total_price" jdbcType="INTEGER" property="totalPrice" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="payed_at" jdbcType="TIMESTAMP" property="payedAt" />
    <result column="types" jdbcType="TINYINT" property="types" />
    <result column="customer_address_id" jdbcType="INTEGER" property="customerAddressId" />
    <result column="need_invoice" jdbcType="BIT" property="needInvoice" />
    <result column="actual_price" jdbcType="INTEGER" property="actualPrice" />
    <result column="front_money" jdbcType="INTEGER" property="frontMoney" />
    <result column="front_pay_status" jdbcType="TINYINT" property="frontPayStatus" />
    <result column="pay_status" jdbcType="TINYINT" property="payStatus" />
    <result column="created_user_id" jdbcType="INTEGER" property="createdUserId" />
    <result column="created_user_type" jdbcType="TINYINT" property="createdUserType" />
    <result column="process_user_id" jdbcType="INTEGER" property="processUserId" />
    <result column="process_user_name" jdbcType="VARCHAR" property="processUserName" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="belongs_to" jdbcType="INTEGER" property="belongsTo" />
    <result column="invoice_type" jdbcType="INTEGER" property="invoiceType" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="total_quantity" jdbcType="INTEGER" property="totalQuantity" />
    <result column="belongs_user_id" jdbcType="INTEGER" property="belongsUserId" />
    <result column="invoice_info" jdbcType="LONGVARCHAR" property="invoiceInfo" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.comdosoft.financial.manage.domain.zhangfu.Order">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into orders (order_number, customer_id, total_price, 
      status, payed_at, types, 
      customer_address_id, need_invoice, actual_price, 
      front_money, front_pay_status, pay_status, 
      created_user_id, created_user_type, process_user_id, 
      process_user_name, created_at, updated_at, 
      belongs_to, invoice_type, comment, 
      total_quantity, belongs_user_id, invoice_info
      )
    values (#{orderNumber,jdbcType=VARCHAR}, #{customerId,jdbcType=INTEGER}, #{totalPrice,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT}, #{payedAt,jdbcType=TIMESTAMP}, #{types,jdbcType=TINYINT}, 
      #{customerAddressId,jdbcType=INTEGER}, #{needInvoice,jdbcType=BIT}, #{actualPrice,jdbcType=INTEGER}, 
      #{frontMoney,jdbcType=INTEGER}, #{frontPayStatus,jdbcType=TINYINT}, #{payStatus,jdbcType=TINYINT}, 
      #{createdUserId,jdbcType=INTEGER}, #{createdUserType,jdbcType=TINYINT}, #{processUserId,jdbcType=INTEGER}, 
      #{processUserName,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{belongsTo,jdbcType=INTEGER}, #{invoiceType,jdbcType=INTEGER}, #{comment,jdbcType=VARCHAR}, 
      #{totalQuantity,jdbcType=INTEGER}, #{belongsUserId,jdbcType=INTEGER}, #{invoiceInfo,jdbcType=LONGVARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.comdosoft.financial.manage.domain.zhangfu.Order">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update orders
    set order_number = #{orderNumber,jdbcType=VARCHAR},
      customer_id = #{customerId,jdbcType=INTEGER},
      total_price = #{totalPrice,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      payed_at = #{payedAt,jdbcType=TIMESTAMP},
      types = #{types,jdbcType=TINYINT},
      customer_address_id = #{customerAddressId,jdbcType=INTEGER},
      need_invoice = #{needInvoice,jdbcType=BIT},
      actual_price = #{actualPrice,jdbcType=INTEGER},
      front_money = #{frontMoney,jdbcType=INTEGER},
      front_pay_status = #{frontPayStatus,jdbcType=TINYINT},
      pay_status = #{payStatus,jdbcType=TINYINT},
      created_user_id = #{createdUserId,jdbcType=INTEGER},
      created_user_type = #{createdUserType,jdbcType=TINYINT},
      process_user_id = #{processUserId,jdbcType=INTEGER},
      process_user_name = #{processUserName,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      belongs_to = #{belongsTo,jdbcType=INTEGER},
      invoice_type = #{invoiceType,jdbcType=INTEGER},
      comment = #{comment,jdbcType=VARCHAR},
      total_quantity = #{totalQuantity,jdbcType=INTEGER},
      belongs_user_id = #{belongsUserId,jdbcType=INTEGER},
      invoice_info = #{invoiceInfo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, order_number, customer_id, total_price, status, payed_at, types, customer_address_id, 
    need_invoice, actual_price, front_money, front_pay_status, pay_status, created_user_id, 
    created_user_type, process_user_id, process_user_name, created_at, updated_at, belongs_to, 
    invoice_type, comment, total_quantity, belongs_user_id, invoice_info
    from orders
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, order_number, customer_id, total_price, status, payed_at, types, customer_address_id, 
    need_invoice, actual_price, front_money, front_pay_status, pay_status, created_user_id, 
    created_user_type, process_user_id, process_user_name, created_at, updated_at, belongs_to, 
    invoice_type, comment, total_quantity, belongs_user_id, invoice_info
    from orders
  </select>
  
  	<!-- 分页result -->
	<resultMap extends="BaseResultMap" id="PageOrderResultMap" type="com.comdosoft.financial.manage.domain.zhangfu.Order">
		<association columnPrefix="c_" javaType="com.comdosoft.financial.manage.domain.zhangfu.Customer" property="customer" resultMap="com.comdosoft.financial.manage.mapper.zhangfu.CustomerMapper.BaseResultMap" />
		<!-- <collection column="id" ofType="com.comdosoft.financial.manage.domain.zhangfu.OrderGood" property="orderGoods" select="com.comdosoft.financial.manage.mapper.zhangfu.selectOrderGoods" /> -->
		<!-- <association columnPrefix="g_" javaType="com.comdosoft.financial.manage.domain.zhangfu.Good" property="goods" resultMap="com.comdosoft.financial.manage.mapper.zhangfu.GoodMapper.BaseResultMap" /> -->
	</resultMap>
  <sql id="pageWhere">
		<where>
			<if test="status != null"> AND o.status =#{status} </if>
			<if test="keys != null"> AND (invoice_info like #{keys} or comment like #{keys} or
				order_number like #{keys}) </if>
			<if test="factoryId != null and factoryId !=0"> AND belongs_to =#{factoryId} </if>
		</where>
	</sql>
  <select id="findPageOrdersByKeys" resultMap="PageOrderResultMap">
		select o.*,c.id as c_id,c.username as c_username,c.name as c_name,c.phone as c_phone
		from orders o left join customers c on o.customer_id=c.id 
		<include refid="pageWhere" />
		order by created_at desc limit #{pageRequest.offset}, #{pageRequest.pageSize}
	</select>

	<select id="countByKeys" resultType="long">
		SELECT count(*) as count
		FROM orders o
		<include refid="pageWhere" />
	</select>
	
	<resultMap extends="BaseResultMap" id="OrderInfoResultMap" type="com.comdosoft.financial.manage.domain.zhangfu.Order">
		<association columnPrefix="c_" javaType="com.comdosoft.financial.manage.domain.zhangfu.Customer" property="customer" resultMap="com.comdosoft.financial.manage.mapper.zhangfu.CustomerMapper.BaseResultMap" />
		<association columnPrefix="ca_" javaType="com.comdosoft.financial.manage.domain.zhangfu.CustomerAddress" property="customerAddress" resultMap="com.comdosoft.financial.manage.mapper.zhangfu.CustomerAddressMapper.BaseResultMap" />
		<association columnPrefix="f_" javaType="com.comdosoft.financial.manage.domain.zhangfu.Factory" property="factory" resultMap="com.comdosoft.financial.manage.mapper.zhangfu.FactoryMapper.BaseResultMap" />
		<collection column="id" ofType="com.comdosoft.financial.manage.domain.zhangfu.OrderGood" property="orderGoods" select="com.comdosoft.financial.manage.mapper.zhangfu.OrderGoodMapper.selectOrderGoodsByOrderId" />
		<collection column="id" ofType="com.comdosoft.financial.manage.domain.zhangfu.OrderPayment" property="orderPayments" select="com.comdosoft.financial.manage.mapper.zhangfu.OrderPaymentMapper.selectOrderPaymentsByOrderId" />
		<collection column="id" ofType="com.comdosoft.financial.manage.domain.zhangfu.OrderMark" property="orderMarks" select="com.comdosoft.financial.manage.mapper.zhangfu.OrderMarkMapper.selectOrderMarksByOrderId" />
	</resultMap>
	<select id="findOrderInfo" resultMap="OrderInfoResultMap">
		select o.*,c.id as c_id,c.username as c_username,c.name as c_name,c.phone as c_phone,
		ca.id as ca_id,ca.address as ca_address,ca.receiver as ca_receiver,
		f.id as f_id,f.name as f_name
		from orders o 
		left join customers c on o.customer_id=c.id 
		left join customer_addresses ca on o.customer_address_id=ca.id 
		left join factories f on o.belongs_to=f.id
		where o.id=#{param1}
	</select>
</mapper>
