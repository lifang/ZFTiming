<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.comdosoft.financial.manage.mapper.zhangfu.GoodMapper">
  <resultMap id="BaseResultMap" type="com.comdosoft.financial.manage.domain.zhangfu.Good">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="second_title" jdbcType="VARCHAR" property="secondTitle" />
    <result column="key_worlds" jdbcType="VARCHAR" property="keyWorlds" />
    <result column="factory_id" jdbcType="INTEGER" property="factoryId" />
    <result column="pos_category_id" jdbcType="INTEGER" property="posCategoryId" />
    <result column="model_number" jdbcType="VARCHAR" property="modelNumber" />
    <result column="encrypt_card_way_id" jdbcType="INTEGER" property="encryptCardWayId" />
    <result column="sign_order_way_id" jdbcType="INTEGER" property="signOrderWayId" />
    <result column="battery_info" jdbcType="VARCHAR" property="batteryInfo" />
    <result column="shell_material" jdbcType="VARCHAR" property="shellMaterial" />
    <result column="retail_price" jdbcType="INTEGER" property="retailPrice" />
    <result column="purchase_price" jdbcType="INTEGER" property="purchasePrice" />
    <result column="floor_price" jdbcType="INTEGER" property="floorPrice" />
    <result column="floor_purchase_quantity" jdbcType="INTEGER" property="floorPurchaseQuantity" />
    <result column="has_purchase" jdbcType="BIT" property="hasPurchase" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="total_score" jdbcType="INTEGER" property="totalScore" />
    <result column="total_comment" jdbcType="INTEGER" property="totalComment" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="has_lease" jdbcType="BIT" property="hasLease" />
    <result column="lease_price" jdbcType="INTEGER" property="leasePrice" />
    <result column="lease_time" jdbcType="INTEGER" property="leaseTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="is_published" jdbcType="BIT" property="isPublished" />
    <result column="good_brands_id" jdbcType="INTEGER" property="goodBrandsId" />
    <result column="created_user_id" jdbcType="INTEGER" property="createdUserId" />
    <result column="created_user_type" jdbcType="TINYINT" property="createdUserType" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="belongs_to" jdbcType="INTEGER" property="belongsTo" />
    <result column="published_at" jdbcType="TIMESTAMP" property="publishedAt" />
    <result column="volume_number" jdbcType="INTEGER" property="volumeNumber" />
    <result column="purchase_number" jdbcType="INTEGER" property="purchaseNumber" />
    <result column="lease_deposit" jdbcType="INTEGER" property="leaseDeposit" />
    <result column="return_time" jdbcType="INTEGER" property="returnTime" />
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
    <result column="lease_description" jdbcType="LONGVARCHAR" property="leaseDescription" />
    <result column="lease_agreement" jdbcType="LONGVARCHAR" property="leaseAgreement" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.comdosoft.financial.manage.domain.zhangfu.Good">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into goods (title, second_title, key_worlds, 
      factory_id, pos_category_id, model_number, 
      encrypt_card_way_id, sign_order_way_id, battery_info, 
      shell_material, retail_price, purchase_price, 
      floor_price, floor_purchase_quantity, has_purchase, 
      quantity, total_score, total_comment, 
      price, has_lease, lease_price, 
      lease_time, status, is_published, 
      good_brands_id, created_user_id, created_user_type, 
      created_at, updated_at, belongs_to, 
      published_at, volume_number, purchase_number, 
      lease_deposit, return_time, description, 
      lease_description, lease_agreement
      )
    values (#{title,jdbcType=VARCHAR}, #{secondTitle,jdbcType=VARCHAR}, #{keyWorlds,jdbcType=VARCHAR}, 
      #{factoryId,jdbcType=INTEGER}, #{posCategoryId,jdbcType=INTEGER}, #{modelNumber,jdbcType=VARCHAR}, 
      #{encryptCardWayId,jdbcType=INTEGER}, #{signOrderWayId,jdbcType=INTEGER}, #{batteryInfo,jdbcType=VARCHAR}, 
      #{shellMaterial,jdbcType=VARCHAR}, #{retailPrice,jdbcType=INTEGER}, #{purchasePrice,jdbcType=INTEGER}, 
      #{floorPrice,jdbcType=INTEGER}, #{floorPurchaseQuantity,jdbcType=INTEGER}, #{hasPurchase,jdbcType=BIT}, 
      #{quantity,jdbcType=INTEGER}, #{totalScore,jdbcType=INTEGER}, #{totalComment,jdbcType=INTEGER}, 
      #{price,jdbcType=INTEGER}, #{hasLease,jdbcType=BIT}, #{leasePrice,jdbcType=INTEGER}, 
      #{leaseTime,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{isPublished,jdbcType=BIT}, 
      #{goodBrandsId,jdbcType=INTEGER}, #{createdUserId,jdbcType=INTEGER}, #{createdUserType,jdbcType=TINYINT}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{belongsTo,jdbcType=INTEGER}, 
      #{publishedAt,jdbcType=TIMESTAMP}, #{volumeNumber,jdbcType=INTEGER}, #{purchaseNumber,jdbcType=INTEGER}, 
      #{leaseDeposit,jdbcType=INTEGER}, #{returnTime,jdbcType=INTEGER}, #{description,jdbcType=LONGVARCHAR}, 
      #{leaseDescription,jdbcType=LONGVARCHAR}, #{leaseAgreement,jdbcType=LONGVARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.comdosoft.financial.manage.domain.zhangfu.Good">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update goods
    set title = #{title,jdbcType=VARCHAR},
      second_title = #{secondTitle,jdbcType=VARCHAR},
      key_worlds = #{keyWorlds,jdbcType=VARCHAR},
      factory_id = #{factoryId,jdbcType=INTEGER},
      pos_category_id = #{posCategoryId,jdbcType=INTEGER},
      model_number = #{modelNumber,jdbcType=VARCHAR},
      encrypt_card_way_id = #{encryptCardWayId,jdbcType=INTEGER},
      sign_order_way_id = #{signOrderWayId,jdbcType=INTEGER},
      battery_info = #{batteryInfo,jdbcType=VARCHAR},
      shell_material = #{shellMaterial,jdbcType=VARCHAR},
      retail_price = #{retailPrice,jdbcType=INTEGER},
      purchase_price = #{purchasePrice,jdbcType=INTEGER},
      floor_price = #{floorPrice,jdbcType=INTEGER},
      floor_purchase_quantity = #{floorPurchaseQuantity,jdbcType=INTEGER},
      has_purchase = #{hasPurchase,jdbcType=BIT},
      quantity = #{quantity,jdbcType=INTEGER},
      total_score = #{totalScore,jdbcType=INTEGER},
      total_comment = #{totalComment,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      has_lease = #{hasLease,jdbcType=BIT},
      lease_price = #{leasePrice,jdbcType=INTEGER},
      lease_time = #{leaseTime,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      is_published = #{isPublished,jdbcType=BIT},
      good_brands_id = #{goodBrandsId,jdbcType=INTEGER},
      created_user_id = #{createdUserId,jdbcType=INTEGER},
      created_user_type = #{createdUserType,jdbcType=TINYINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      belongs_to = #{belongsTo,jdbcType=INTEGER},
      published_at = #{publishedAt,jdbcType=TIMESTAMP},
      volume_number = #{volumeNumber,jdbcType=INTEGER},
      purchase_number = #{purchaseNumber,jdbcType=INTEGER},
      lease_deposit = #{leaseDeposit,jdbcType=INTEGER},
      return_time = #{returnTime,jdbcType=INTEGER},
      description = #{description,jdbcType=LONGVARCHAR},
      lease_description = #{leaseDescription,jdbcType=LONGVARCHAR},
      lease_agreement = #{leaseAgreement,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, title, second_title, key_worlds, factory_id, pos_category_id, model_number, 
    encrypt_card_way_id, sign_order_way_id, battery_info, shell_material, retail_price, 
    purchase_price, floor_price, floor_purchase_quantity, has_purchase, quantity, total_score, 
    total_comment, price, has_lease, lease_price, lease_time, status, is_published, good_brands_id, 
    created_user_id, created_user_type, created_at, updated_at, belongs_to, published_at, 
    volume_number, purchase_number, lease_deposit, return_time, description, lease_description, 
    lease_agreement
    from goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, title, second_title, key_worlds, factory_id, pos_category_id, model_number, 
    encrypt_card_way_id, sign_order_way_id, battery_info, shell_material, retail_price, 
    purchase_price, floor_price, floor_purchase_quantity, has_purchase, quantity, total_score, 
    total_comment, price, has_lease, lease_price, lease_time, status, is_published, good_brands_id, 
    created_user_id, created_user_type, created_at, updated_at, belongs_to, published_at, 
    volume_number, purchase_number, lease_deposit, return_time, description, lease_description, 
    lease_agreement
    from goods
  </select>

	<!-- 分页result -->
	<resultMap extends="BaseResultMap" id="PageGoodResultMap" type="com.comdosoft.financial.manage.domain.zhangfu.Good">
        <association columnPrefix="gb_" javaType="com.comdosoft.financial.manage.domain.zhangfu.GoodBrand" property="goodBrand" resultMap="com.comdosoft.financial.manage.mapper.zhangfu.GoodBrandMapper.BaseResultMap" />
	</resultMap>

	<sql id="pageWhere">
		<where>
			<if test="status != null"> AND status =#{status} </if>
			<if test="keys != null"> AND (title like #{keys} or second_title like #{keys} or
				key_worlds like #{keys}) </if>
		</where>
	</sql>
	<select id="findPageGoodsByKeys" resultMap="PageGoodResultMap">
		select g.*,
		gb.id as gb_id, gb.name as gb_name
		from goods g left join good_brands gb on g.good_brands_id=gb.id
		<include refid="pageWhere" />
		order by created_at desc limit #{pageRequest.offset}, #{pageRequest.pageSize}
	</select>

	<select id="countByKeys" resultType="long">
		SELECT count(*) as count
		FROM goods
		<include refid="pageWhere" />

	</select>
	
	<!-- 查询列表单条数据 -->
	<select id="findPageRowGood" resultMap="PageGoodResultMap">
		select g.*,
		gb.id as gb_id, gb.name as gb_name
		from goods g left join good_brands gb on g.good_brands_id=gb.id
		where g.id=#{param1}
	</select>

  	<!-- 详情 -->
	<resultMap extends="BaseResultMap" id="GoodInfoResultMap" type="com.comdosoft.financial.manage.domain.zhangfu.Good">
		<association columnPrefix="gb_" javaType="com.comdosoft.financial.manage.domain.zhangfu.GoodBrand" property="goodBrand" resultMap="com.comdosoft.financial.manage.mapper.zhangfu.GoodBrandMapper.BaseResultMap" />
		<association columnPrefix="f_" javaType="com.comdosoft.financial.manage.domain.zhangfu.Factory" property="factory" resultMap="com.comdosoft.financial.manage.mapper.zhangfu.FactoryMapper.BaseResultMap" />
		<association columnPrefix="pc_" javaType="com.comdosoft.financial.manage.domain.zhangfu.PosCategory" property="posCategory" resultMap="com.comdosoft.financial.manage.mapper.zhangfu.PosCategoryMapper.BaseResultMap" />
		<association columnPrefix="dsow_" javaType="com.comdosoft.financial.manage.domain.zhangfu.DictionarySignOrderWay" property="signOrderWay" resultMap="com.comdosoft.financial.manage.mapper.zhangfu.DictionarySignOrderWayMapper.BaseResultMap" />
		<association columnPrefix="decw_" javaType="com.comdosoft.financial.manage.domain.zhangfu.DictionaryEncryptCardWay" property="encryptCardWay" resultMap="com.comdosoft.financial.manage.mapper.zhangfu.DictionaryEncryptCardWayMapper.BaseResultMap" />
		<collection column="id" ofType="com.comdosoft.financial.manage.domain.zhangfu.PayChannel" property="channels" select="com.comdosoft.financial.manage.mapper.zhangfu.PayChannelMapper.selectChannels" />
		<collection column="id" ofType="com.comdosoft.financial.manage.domain.zhangfu.GoodsPicture" property="pictures" select="com.comdosoft.financial.manage.mapper.zhangfu.GoodsPictureMapper.selectPictures" />
		<collection column="id" ofType="com.comdosoft.financial.manage.domain.zhangfu.DictionaryCardType" property="cardTypes" select="com.comdosoft.financial.manage.mapper.zhangfu.DictionaryCardTypeMapper.selectCardTypes" />
		<collection column="id" ofType="com.comdosoft.financial.manage.domain.zhangfu.Good" property="relativeGoods" select="selectRelativeGoods" />
	</resultMap>
  
  	<select id="findGoodInfo" resultMap="GoodInfoResultMap">
		select g.*,
		gb.id as gb_id, gb.name as gb_name,
		f.id as f_id, f.name as f_name,
		pc.id as pc_id, pc.name as pc_name,
		dsow.id as dsow_id, dsow.sign_order_way as dsow_sign_order_way,
		decw.id as decw_id, decw.encrypt_card_way as decw_encrypt_card_way
		from goods g left join good_brands gb on g.good_brands_id=gb.id
		left join factories f on g.factory_id=f.id
		left join pos_categories pc on g.pos_category_id=pc.id
		left join dictionary_sign_order_ways dsow on g.sign_order_way_id=dsow.id
		left join dictionary_encrypt_card_ways decw on g.encrypt_card_way_id=decw.id
		where g.id=#{param1}
	</select>

  	<!--获取关联商品 -->
	<select id="selectRelativeGoods" resultMap="BaseResultMap">
		select rgood.id, rgood.title
		from good_relations gr inner join goods rgood on gr.relative_good_id=rgood.id
		where gr.good_id = #{param1}
	</select>	
  	<!--商品编辑页 搜索商品 -->
   <select id="selectByStatusAndName" resultMap="BaseResultMap">
    select * 
    from goods 
		<include refid="pageWhere" />
  </select>
    <!--类型的商品数-->
    <select id="countByCategoryId" resultType="long">
        SELECT count(*) as count
        FROM goods
        WHERE pos_category_id = #{param1}
    </select>

    <!-- 详情lazy -->
    <resultMap extends="BaseResultMap" id="GoodInfoLazyResultMap" type="com.comdosoft.financial.manage.domain.zhangfu.Good">
        <association column="good_brands_id" fetchType="lazy" javaType="com.comdosoft.financial.manage.domain.zhangfu.GoodBrand" property="goodBrand" select="com.comdosoft.financial.manage.mapper.zhangfu.GoodBrandMapper.selectByPrimaryKey" />
        <association column="factory_id" fetchType="lazy" javaType="com.comdosoft.financial.manage.domain.zhangfu.Factory" property="factory" select="com.comdosoft.financial.manage.mapper.zhangfu.FactoryMapper.selectByPrimaryKey" />
        <association column="pos_category_id" fetchType="lazy" javaType="com.comdosoft.financial.manage.domain.zhangfu.PosCategory" property="posCategory" select="com.comdosoft.financial.manage.mapper.zhangfu.PosCategoryMapper.selectByPrimaryKey" />
        <association column="sign_order_way_id" fetchType="lazy" javaType="com.comdosoft.financial.manage.domain.zhangfu.DictionarySignOrderWay" property="signOrderWay" select="com.comdosoft.financial.manage.mapper.zhangfu.DictionarySignOrderWayMapper.selectByPrimaryKey" />
        <association column="encrypt_card_way_id" fetchType="lazy" javaType="com.comdosoft.financial.manage.domain.zhangfu.DictionaryEncryptCardWay" property="encryptCardWay" select="com.comdosoft.financial.manage.mapper.zhangfu.DictionaryEncryptCardWayMapper.selectByPrimaryKey" />
        <collection column="id" fetchType="lazy" ofType="com.comdosoft.financial.manage.domain.zhangfu.PayChannel" property="channels" select="com.comdosoft.financial.manage.mapper.zhangfu.PayChannelMapper.selectChannels" />
        <collection column="id" fetchType="lazy" ofType="com.comdosoft.financial.manage.domain.zhangfu.GoodsPicture" property="pictures" select="com.comdosoft.financial.manage.mapper.zhangfu.GoodsPictureMapper.selectPictures" />
        <collection column="id" fetchType="lazy" ofType="com.comdosoft.financial.manage.domain.zhangfu.DictionaryCardType" property="cardTypes" select="com.comdosoft.financial.manage.mapper.zhangfu.DictionaryCardTypeMapper.selectCardTypes" />
        <collection column="id" fetchType="lazy" ofType="com.comdosoft.financial.manage.domain.zhangfu.Good" property="relativeGoods" select="selectRelativeGoods" />
    </resultMap>

    <select id="findGoodLazyInfo" resultMap="GoodInfoLazyResultMap">
        select g.*
        from goods g
        where g.id=#{param1}
    </select>

</mapper>